//# ExercÃ­cio 1
//Construa um programa, seguindo os seguintes passos:

//**a)** Declare uma variÃ¡vel para armazenar um **nome**, sem atribuir um valor.

const nome = null

//**b)** Declare uma variÃ¡vel para armazenar uma **idade**, sem atribuir um valor.

const idade = null

//**c)** Imprima na tela o **tipo** dessas variÃ¡veis que acabou de criar, usando o comando `typeof`.

console.log(typeof(nome))
console.log(typeof(idade))

//**d)** Reflita: por que esse tipo foi impresso? Escreva a resposta em um comentÃ¡rio de cÃ³digo.

//Por causa da atribuiÃ§Ã£o, sem valor Ã© um null, null Ã© compreendido como objeto.

//**e)** Depois, disso, atualize o cÃ³digo para **perguntar** ao usuÃ¡rio seu nome e sua idade, atribuindo esses dois valores Ã s variÃ¡veis que acabou de criar.

const nome1 = prompt('qual Ã© o seu nome?')
const idade1 = prompt('qual Ã© sua idade?')

//>ğŸ’¡Se vocÃª receber um erro de cÃ³digo nessa etapa, reflita sobre o tipo de declaraÃ§Ã£o que utilizou.
    

//**f)** Novamente, imprima na tela o tipo dessas variÃ¡veis. O que vocÃª notou? Escreva em um comentÃ¡rio de cÃ³digo.

console.log(typeof(nome1))
console.log(typeof(idade1))

//**g)** Para finalizar, imprima na tela a mensagem: "OlÃ¡ `nome`,  vocÃª tem `idade` anos". Onde `nome` e `idade` sÃ£o os valores que o usuÃ¡rio inseriu

alert("fala meu querido " + nome1 + " Ã© um prazer falar com uma pessoa com " + idade1 + " anos");

//>ğŸ’¡  Dica: para imprimir mais de um valor na mesma linha, vocÃª pode usar essa sintaxe:
//```jsx
//console.log(valor1, valor2)
//```